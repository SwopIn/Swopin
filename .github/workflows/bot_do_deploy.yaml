name: Deploy bot

on:
  workflow_dispatch:

env:
  REGISTRY: "registry.digitalocean.com/swopinbot"
  IMAGE_NAME: "swopintgbot"
  CONTAINER_NAME: "swopinbot_container"

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout master
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Build container image
        working-directory: ./bot
        run: docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) .

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600

      - name: Push image to DigitalOcean Container Registry
        run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      - name: Deploy to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          envs: IMAGE_NAME,REGISTRY,GITHUB_SHA,,CONTAINER_NAME
          script: |
            # Login into Digital Ocean Registry
            docker login -u ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} -p ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} $(echo $REGISTRY)

            # Stop running container
            docker stop $(echo $CONTAINER_NAME)

            # Remove old container
            docker rm $(echo $CONTAINER_NAME)

            # Set env variables
            export TOKEN=${{ secrets.TELEGRAM_TOKEN }}
            export DB_APIKEY=${{ secrets.DB_APIKEY }}
            export DB_IP=${{ secrets.DB_IP}}
            export TWA_IP=${{ secrets.TWA_IP}}
            export ADMINS=${{ secrets.ADMINS}}

            # Run a new container from a new image
            docker run -e TOKEN -e DB_APIKEY -e DB_IP -e TWA_IP -e ADMINS -d \
            --restart always \
            --network supabase_default \
            --publish 23333:23333 \
            --name $(echo $CONTAINER_NAME) \
            $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)
